{"map":"{\"version\":3,\"sources\":[\"/home/johnathan/Repositories/nordic-coder/ReactJS/week-1/my-profile/src/Globals/Globals.jsx\",\"/home/johnathan/Repositories/nordic-coder/ReactJS/week-1/my-profile/src/Container/Container.jsx\",\"/home/johnathan/Repositories/nordic-coder/ReactJS/week-1/my-profile/src/Introduction/Introduction.jsx\",\"/home/johnathan/Repositories/nordic-coder/ReactJS/week-1/my-profile/src/AboutMe/AboutMe.jsx\",\"/home/johnathan/Repositories/nordic-coder/ReactJS/week-1/my-profile/src/App.js\",\"/home/johnathan/Repositories/nordic-coder/ReactJS/week-1/my-profile/src/serviceWorker.js\",\"/home/johnathan/Repositories/nordic-coder/ReactJS/week-1/my-profile/src/index.js\"],\"names\":[\"Globals\",\"_ref\",\"children\",\"react_default\",\"a\",\"createElement\",\"className\",\"Container\",\"customStyles\",\"style\",\"Introduction\",\"Container_Container\",\"styles\",\"occupations\",\"map\",\"val\",\"menu\",\"item\",\"toUpperCase\",\"flexDirection\",\"justifyContent\",\"paddingLeft\",\"Aboutme\",\"App\",\"props\",\"Globals_Globals\",\"Introduction_Introduction\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"qRAKe,SAASA,EAATC,GAA+B,IAAZC,EAAYD,EAAZC,SAChC,OACEC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,WACZJ,SCAQ,SAASK,EAATN,GAA+C,IAA1BC,EAA0BD,EAA1BC,SAAUM,EAAgBP,EAAhBO,aAC5C,OACEL,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,YAAYG,MAAOD,GAC/BN,SCNQ,SAASQ,IACtB,OACEP,EAAAC,EAAAC,cAACM,EAAD,CAAWH,aAAcI,GACvBT,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,SAAd,mBACAH,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,SAAd,SACCO,EAAYC,IAAI,SAAAC,GAAG,OAAIZ,EAAAC,EAAAC,cAAA,OAAA,CAAMC,UAAU,eAAeS,KACvDZ,EAAAC,EAAAC,cAAA,MAAA,KACGW,EAAKF,IAAI,SAAAG,GAAI,OAAId,EAAAC,EAAAC,cAAA,IAAA,CAAGC,UAAU,QAAQW,EAAKC,mBAMpD,IAAIL,EAAc,CAAC,aAAc,SAAU,WAEvCG,EAAO,CAAC,QAAS,WAAY,cAAe,YAAa,YAEzDJ,EAAS,CACXO,cAAe,SACfC,eAAgB,SAChBC,YAAa,aCpBA,SAASC,IACtB,OACEnB,EAAAC,EAAAC,cAACM,EAAD,KACER,EAAAC,EAAAC,cAAA,MAAA,KAAA,gBCFN,IAWekB,EAXL,SAACC,GAAD,OACRrB,EAAAC,EAAAC,cAACoB,EAAD,KACEtB,EAAAC,EAAAC,cAACqB,EAAD,MACAvB,EAAAC,EAAAC,cAACiB,EAAD,QCGgBK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OACP9B,EAAAC,EAAAC,cAAC6B,EAAD,MACAC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from 'react';\\n\\nimport './Globals.css';\\n\\n// A component for storing initial global CSS values.\\nexport default function Globals({ children }) {\\n  return (\\n    <div className=\\\"globals\\\">\\n      {children}\\n    </div>\\n  );\\n}\\n\",\"import React from 'react';\\n\\nimport './Container.css';\\n\\n/**\\n * A wrapper component, with customable style attributes.\\n * It follows the CSS Flex settings.\\n * */\\nexport default function Container({ children, customStyles }) {\\n  return (\\n    <div className=\\\"container\\\" style={customStyles}>\\n      {children}\\n    </div>\\n  );\\n}\\n\",\"import React from 'react';\\n\\nimport Container from '../Container/Container';\\nimport './Introduction.css';\\n\\nexport default function Introduction() {\\n  return (\\n    <Container customStyles={styles}>\\n      <h1 className=\\\"intro\\\">Hi, I'm LÃ¢m.</h1>\\n      <h1 className=\\\"intro\\\">I'm a</h1>\\n      {occupations.map(val => <span className=\\\"occupations\\\">{val}</span>)}\\n      <nav>\\n        {menu.map(item => <p className=\\\"menu\\\">{item.toUpperCase()}</p>)}\\n      </nav>\\n    </Container>\\n  );\\n}\\n\\nlet occupations = ['Programmer', 'Artist', 'Dreamer'];\\n\\nlet menu = ['About', 'My Goals', 'My Troubles', 'My Skills', 'Contacts'];\\n\\nlet styles = {\\n  flexDirection: 'column',\\n  justifyContent: 'center',\\n  paddingLeft: '15%'\\n};\\n\",\"import React from 'react';\\n\\nimport Container from '../Container/Container';\\nimport './AboutMe.css';\\n\\nexport default function Aboutme() {\\n  return (\\n    <Container>\\n      <div>AAAAAAAAAAA</div>\\n    </Container>\\n  )\\n}\\n\",\"import React from 'react';\\n\\nimport Globals from './Globals/Globals';\\nimport Introduction from './Introduction/Introduction';\\nimport AboutMe from './AboutMe/AboutMe';\\n\\nlet App = (props) => (\\n  <Globals>\\n    <Introduction />\\n    <AboutMe />\\n    {/*<Goals />\\n    <Troubles />\\n    <Skills />\\n    <Info />*/}\\n  </Globals>\\n);\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(\\n  <App />,\\n  document.getElementById('root')\\n);\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,function(e,n,t){e.exports=t(20)},,,,,function(e,n,t){},,function(e,n,t){},,,,function(e,n,t){},,function(e,n,t){},,function(e,n,t){},,function(e,n,t){\"use strict\";t.r(n);var a=t(0),r=t.n(a),o=t(2),c=t.n(o);t(8),t(10);function l(e){var n=e.children;return r.a.createElement(\"div\",{className:\"globals\"},n)}t(14);function i(e){var n=e.children,t=e.customStyles;return r.a.createElement(\"div\",{className:\"container\",style:t},n)}t(16);function u(){return r.a.createElement(i,{customStyles:f},r.a.createElement(\"h1\",{className:\"intro\"},\"Hi, I'm L\\xe2m.\"),r.a.createElement(\"h1\",{className:\"intro\"},\"I'm a\"),s.map(function(e){return r.a.createElement(\"span\",{className:\"occupations\"},e)}),r.a.createElement(\"nav\",null,m.map(function(e){return r.a.createElement(\"p\",{className:\"menu\"},e.toUpperCase())})))}var s=[\"Programmer\",\"Artist\",\"Dreamer\"],m=[\"About\",\"My Goals\",\"My Troubles\",\"My Skills\",\"Contacts\"],f={flexDirection:\"column\",justifyContent:\"center\",paddingLeft:\"15%\"};t(18);function d(){return r.a.createElement(i,null,r.a.createElement(\"div\",null,\"AAAAAAAAAAA\"))}var E=function(e){return r.a.createElement(l,null,r.a.createElement(u,null),r.a.createElement(d,null))};Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(r.a.createElement(E,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}],[[3,2,1]]]);","extractedComments":[]}